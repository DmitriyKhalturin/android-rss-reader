apply plugin: "com.android.library"

def globalConfiguration = rootProject.extensions.getByName("ext")

android {
  compileSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
  buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

  defaultConfig {
    minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
    targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

    versionCode globalConfiguration.getAt("androidVersionCode")
    versionName globalConfiguration.getAt("androidVersionName")

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    javaCompileOptions {
      annotationProcessorOptions {
        arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
      }
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
    }

    debug {
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  lintOptions {
    abortOnError false
  }
}

dependencies {
  implementation fileTree(dir: "libs", include: ["*.jar"])

  testImplementation "junit:junit:4.12"
  androidTestImplementation "com.android.support.test:runner:1.0.2"
  androidTestImplementation "com.android.support.test.espresso:espresso-core:3.0.2"

  implementation "com.android.support:appcompat-v7:${globalConfiguration.getAt("supportLibraryVersion")}"

  api "android.arch.persistence.room:runtime:1.1.1"
  annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
  api "android.arch.persistence.room:rxjava2:1.1.1"

  implementation "io.reactivex.rxjava2:rxjava:${globalConfiguration.getAt("rxJavaVersion")}"
  implementation "javax.inject:javax.inject:1"

//  implementation "com.squareup.okhttp3:okhttp:3.9.0"
//  implementation "com.einmalfel:earl:1.2.0"

  implementation project(":domain")
}
